name: SonarQube
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:   
          
  analyze:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]  # Change to 'javascript', 'python', etc. as needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild project
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Verify deployment manifest SHA256
        run: |
          echo "known-good-hash  deployment.yaml" > deployment.yaml.sha256
          #sha256sum -c deployment.yaml.sha256

      ### üì¶ 3. Dependency Chain Abuse Protection
      - name: Dependency Review (GitHub native)
        uses: actions/dependency-review-action@v4.7.1
        with:
          fail-on-severity: critical
          comment-summary-in-pr: true
  
      - name: OWASP Dependency-Check (SCA)
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: "vulnado"
          scanPath: "./"
          format: "HTML"
          outputDirectory: "reports"
        
      ### üåê 5. Detect unauthorized third-party calls
      - name: Block unexpected network calls
        run: |
          sudo iptables -P OUTPUT DROP
          sudo iptables -A OUTPUT -d github.com -j ACCEPT
          echo "Blocking outbound network except GitHub"
  
      ### ‚úÖ 6. Pin dependency versions
      - name: Ensure dependencies are pinned
        run: |
          grep -E 'version|commit' pom.xml || (echo "Dependencies not pinned!" && exit 1)
  
      ### üßæ 7. SBOM Generation for auditing
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          output-file: sbom.spdx.json
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=vchaudh3_sonar-2607-2127
